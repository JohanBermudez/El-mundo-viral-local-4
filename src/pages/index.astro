---
import Layout from '../layouts/Layout.astro';
import NewsCard from '../components/NewsCard.astro';
import CategoryFilter from '../components/CategoryFilter.astro';
import ViewToggle from '../components/ViewToggle.astro';
import DemoContent from '../components/DemoContent.astro';
import { getArticles, getRecentArticles } from '../lib/supabase';

// Explicitly set to server-side rendering
export const prerender = false;

// Use try-catch to handle potential API errors
let featuredArticles = [];
let latestArticles = [];
let trendingArticles = [];
let recentArticles = [];
let hasError = false;

try {
  console.log('Fetching homepage articles');
  
  // Get featured articles
  const featuredResponse = await getArticles({ 
    featured: true,
    limit: 3 
  });
  featuredArticles = featuredResponse.articles || [];
  console.log(`Found ${featuredArticles.length} featured articles`);
  
  // Get trending articles
  const trendingResponse = await getArticles({
    trending: true,
    limit: 2
  });
  trendingArticles = trendingResponse.articles || [];
  console.log(`Found ${trendingArticles.length} trending articles`);
  
  // Get latest articles
  const latestResponse = await getArticles({ 
    limit: 6 
  });
  latestArticles = latestResponse.articles || [];
  console.log(`Found ${latestArticles.length} latest articles`);
  
  // Get breaking news articles (last 2 hours)
  const recentResponse = await getRecentArticles(2, 4);
  recentArticles = recentResponse.articles || [];
  console.log(`Found ${recentArticles.length} recent articles`);
  
} catch (error) {
  console.error('Error fetching articles for homepage:', error);
  hasError = true;
}

// Client-side view mode
let initialViewMode = 'grid';
---

<Layout title="Inicio">
  {hasError || latestArticles.length === 0 ? (
    <DemoContent />
  ) : (
    <div class="container max-w-6xl mx-auto px-4">
      <!-- Welcome Section and Category Pills for Mobile -->
      <div class="bg-white rounded-lg shadow-sm p-5 mb-6">
        <h2 class="text-xl font-bold mb-2">Bienvenido a El Mundo Viral</h2>
        <p class="text-sm text-gray-700 mb-4">Tu portal de noticias moderno con las últimas actualizaciones organizadas por relevancia:</p>
        
        <!-- Compact Category Cards for Mobile -->
        <div class="grid grid-cols-2 gap-2 md:hidden">
          <a href="/destacados" class="flex items-center justify-center px-3 py-2 rounded-lg bg-yellow-50 text-yellow-700 hover:bg-yellow-100 transition text-sm">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 mr-2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z" />
            </svg>
            Destacados
          </a>
          
          <a href="/tendencias" class="flex items-center justify-center px-3 py-2 rounded-lg bg-blue-50 text-blue-700 hover:bg-blue-100 transition text-sm">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 mr-2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 18L9 11.25l4.306 4.307a11.95 11.95 0 015.814-5.519l2.74-1.22m0 0l-5.94-2.28m5.94 2.28l-2.28 5.941" />
            </svg>
            Tendencias
          </a>
          
          <a href="/virales" class="flex items-center justify-center px-3 py-2 rounded-lg bg-green-50 text-green-700 hover:bg-green-100 transition text-sm">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 mr-2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 13.5l10.5-11.25L12 10.5h8.25L9.75 21.75 12 13.5H3.75z" />
            </svg>
            Virales
          </a>
          
          <a href="/ultima-hora" class="flex items-center justify-center px-3 py-2 rounded-lg bg-red-50 text-red-700 hover:bg-red-100 transition text-sm">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 mr-2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            Última hora
          </a>
        </div>
        
        <!-- Horizontal Category Pills for Desktop -->
        <div class="hidden md:flex md:flex-wrap md:gap-3">
          <a href="/destacados" class="flex items-center px-4 py-2 rounded-full bg-yellow-50 text-yellow-800 hover:bg-yellow-100 transition">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 mr-2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z" />
            </svg>
            Destacados
          </a>
          
          <a href="/tendencias" class="flex items-center px-4 py-2 rounded-full bg-blue-50 text-blue-800 hover:bg-blue-100 transition">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 mr-2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 18L9 11.25l4.306 4.307a11.95 11.95 0 015.814-5.519l2.74-1.22m0 0l-5.94-2.28m5.94 2.28l-2.28 5.941" />
            </svg>
            Tendencias
          </a>
          
          <a href="/virales" class="flex items-center px-4 py-2 rounded-full bg-green-50 text-green-800 hover:bg-green-100 transition">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 mr-2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 13.5l10.5-11.25L12 10.5h8.25L9.75 21.75 12 13.5H3.75z" />
            </svg>
            Virales
          </a>
          
          <a href="/ultima-hora" class="flex items-center px-4 py-2 rounded-full bg-red-50 text-red-800 hover:bg-red-100 transition">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 mr-2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            Última hora
          </a>
        </div>
      </div>
      
      <!-- Breaking News Section (if any recent articles) -->
      {recentArticles.length > 0 && (
        <section class="mb-10">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-2xl font-bold flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 mr-2 text-red-600">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              Última hora
            </h2>
            <a href="/ultima-hora" class="text-primary-600 hover:text-primary-800 text-sm font-medium flex items-center">
              Ver todos
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 ml-1">
                <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
              </svg>
            </a>
          </div>
          
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            {recentArticles.slice(0, 2).map((article) => (
              <NewsCard article={article} viewMode="list" />
            ))}
          </div>
        </section>
      )}
      
      <!-- Featured Section -->
      {featuredArticles.length > 0 && (
        <section class="mb-10">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-2xl font-bold flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 mr-2 text-yellow-600">
                <path stroke-linecap="round" stroke-linejoin="round" d="M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z" />
              </svg>
              Destacados
            </h2>
            <a href="/destacados" class="text-primary-600 hover:text-primary-800 text-sm font-medium flex items-center">
              Ver todos
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 ml-1">
                <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
              </svg>
            </a>
          </div>
          
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            {featuredArticles.map((article) => (
              <NewsCard article={article} viewMode="grid" />
            ))}
          </div>
        </section>
      )}
      
      <!-- Trending Section -->
      {trendingArticles.length > 0 && (
        <section class="mb-10">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-2xl font-bold flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 mr-2 text-blue-600">
                <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 18L9 11.25l4.306 4.307a11.95 11.95 0 015.814-5.519l2.74-1.22m0 0l-5.94-2.28m5.94 2.28l-2.28 5.941" />
              </svg>
              Tendencias
            </h2>
            <a href="/tendencias" class="text-primary-600 hover:text-primary-800 text-sm font-medium flex items-center">
              Ver todos
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 ml-1">
                <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
              </svg>
            </a>
          </div>
          
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            {trendingArticles.map((article) => (
              <NewsCard article={article} viewMode="list" />
            ))}
          </div>
        </section>
      )}
      
      <!-- Latest News Section -->
      <section class="mb-10">
        <div class="flex items-center justify-between mb-6">
          <h2 class="text-2xl font-bold">Últimas Noticias</h2>
          <div class="flex items-center gap-4">
            <ViewToggle activeView={initialViewMode} />
            <button id="showCategoriesBtn" class="md:hidden flex items-center px-3 py-1.5 bg-primary-50 text-primary-700 rounded-md hover:bg-primary-100 text-sm font-medium">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 mr-1">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 3c2.755 0 5.455.232 8.083.678.533.09.917.556.917 1.096v1.044a2.25 2.25 0 01-.659 1.591l-5.432 5.432a2.25 2.25 0 00-.659 1.591v2.927a2.25 2.25 0 01-1.244 2.013L9.75 21v-6.568a2.25 2.25 0 00-.659-1.591L3.659 7.409A2.25 2.25 0 013 5.818V4.774c0-.54.384-1.006.917-1.096A48.32 48.32 0 0112 3z" />
              </svg>
              Categorías
            </button>
          </div>
        </div>
        
        <!-- Horizontal Categories Filter for Medium+ Screens -->
        <div class="hidden md:block mb-6">
          <div class="inline-flex flex-wrap gap-2 mb-6">
            <a href="/" class="px-3 py-1.5 rounded-md text-sm bg-primary-100 text-primary-800 font-medium">
              Todas
            </a>
            <a href="/categoria/tecnologia" class="px-3 py-1.5 rounded-md text-sm bg-gray-100 text-gray-700 hover:bg-gray-200">
              Tecnología
            </a>
            <a href="/categoria/economia" class="px-3 py-1.5 rounded-md text-sm bg-gray-100 text-gray-700 hover:bg-gray-200">
              Economía
            </a>
            <a href="/categoria/deporte" class="px-3 py-1.5 rounded-md text-sm bg-gray-100 text-gray-700 hover:bg-gray-200">
              Deporte
            </a>
            <a href="/categoria/politica" class="px-3 py-1.5 rounded-md text-sm bg-gray-100 text-gray-700 hover:bg-gray-200">
              Política
            </a>
            <a href="/categoria/entretenimiento" class="px-3 py-1.5 rounded-md text-sm bg-gray-100 text-gray-700 hover:bg-gray-200">
              Entretenimiento
            </a>
            <a href="/categoria/subsidios" class="px-3 py-1.5 rounded-md text-sm bg-gray-100 text-gray-700 hover:bg-gray-200">
              Subsidios
            </a>
          </div>
        </div>
        
        {latestArticles.length > 0 ? (
          <>
            <div id="articleContainer" class="grid-layout grid grid-cols-1 md:grid-cols-3 gap-6">
              {latestArticles.map((article) => (
                <NewsCard article={article} viewMode={initialViewMode} />
              ))}
            </div>
            
            <!-- Loading Indicator -->
            <div id="loadingIndicator" class="flex justify-center items-center py-8 hidden">
              <div class="animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-primary-600"></div>
              <span class="ml-3 text-gray-600">Cargando más noticias...</span>
            </div>
            
            <!-- No More Content Indicator -->
            <div id="noMoreContent" class="text-center py-8 text-gray-500 hidden">
              No hay más noticias para mostrar
            </div>
          </>
        ) : (
          <div class="bg-white border border-gray-200 rounded-lg p-8 text-center">
            <svg class="mx-auto h-12 w-12 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z" />
            </svg>
            <h3 class="mt-2 text-lg font-medium text-gray-900">No hay publicaciones aún</h3>
            <p class="mt-1 text-gray-500">Vuelve pronto para ver nuestras últimas publicaciones.</p>
          </div>
        )}
      </section>
      
      <!-- Mobile Categories Modal -->
      <div id="categoriesModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden">
        <div class="absolute bottom-0 left-0 right-0 bg-white rounded-t-xl p-5 transform transition-transform duration-300 translate-y-full" id="categoriesContent">
          <div class="flex justify-between items-center mb-4">
            <h3 class="text-lg font-bold">Filtrar por categoría</h3>
            <button id="closeCategoriesBtn" class="text-gray-500">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          </div>
          
          <div class="grid grid-cols-2 gap-3">
            <a href="/" class="px-3 py-2 text-center rounded-md bg-primary-100 text-primary-800 font-medium">
              Todas
            </a>
            <a href="/categoria/tecnologia" class="px-3 py-2 text-center rounded-md bg-gray-100 text-gray-700 hover:bg-gray-200">
              Tecnología
            </a>
            <a href="/categoria/economia" class="px-3 py-2 text-center rounded-md bg-gray-100 text-gray-700 hover:bg-gray-200">
              Economía
            </a>
            <a href="/categoria/deporte" class="px-3 py-2 text-center rounded-md bg-gray-100 text-gray-700 hover:bg-gray-200">
              Deporte
            </a>
            <a href="/categoria/politica" class="px-3 py-2 text-center rounded-md bg-gray-100 text-gray-700 hover:bg-gray-200">
              Política
            </a>
            <a href="/categoria/entretenimiento" class="px-3 py-2 text-center rounded-md bg-gray-100 text-gray-700 hover:bg-gray-200">
              Entretenimiento
            </a>
            <a href="/categoria/subsidios" class="px-3 py-2 text-center rounded-md bg-gray-100 text-gray-700 hover:bg-gray-200">
              Subsidios
            </a>
          </div>
          
          <div class="mt-4 flex justify-end">
            <button id="applyCategoriesBtn" class="bg-primary-600 text-white px-4 py-2 rounded-lg">Aplicar</button>
          </div>
        </div>
      </div>
    </div>
  )}
</Layout>

<script>
  import { viewMode } from '../store/viewStore';
  
  // Function to update article layout
  function updateLayout(mode) {
    const container = document.getElementById('articleContainer');
    
    if (container) {
      if (mode === 'grid') {
        container.className = 'grid-layout grid grid-cols-1 md:grid-cols-3 gap-6';
      } else {
        container.className = 'list-layout flex flex-col gap-6';
      }
    }
  }
  
  // Initialize with stored preference
  viewMode.subscribe(updateLayout);
  
  // Listen for view mode changes
  window.addEventListener('viewModeChanged', (event) => {
    if (event.detail) {
      updateLayout(event.detail);
    }
  });
  
  // Mobile categories modal
  const showCategoriesBtn = document.getElementById('showCategoriesBtn');
  const closeCategoriesBtn = document.getElementById('closeCategoriesBtn');
  const applyCategoriesBtn = document.getElementById('applyCategoriesBtn');
  const categoriesModal = document.getElementById('categoriesModal');
  const categoriesContent = document.getElementById('categoriesContent');
  
  if (showCategoriesBtn && categoriesModal && categoriesContent) {
    showCategoriesBtn.addEventListener('click', () => {
      categoriesModal.classList.remove('hidden');
      setTimeout(() => {
        categoriesContent.classList.remove('translate-y-full');
      }, 10);
    });
  }
  
  if (closeCategoriesBtn && categoriesModal && categoriesContent) {
    closeCategoriesBtn.addEventListener('click', () => {
      categoriesContent.classList.add('translate-y-full');
      setTimeout(() => {
        categoriesModal.classList.add('hidden');
      }, 300);
    });
  }
  
  if (applyCategoriesBtn && categoriesModal && categoriesContent) {
    applyCategoriesBtn.addEventListener('click', () => {
      categoriesContent.classList.add('translate-y-full');
      setTimeout(() => {
        categoriesModal.classList.add('hidden');
      }, 300);
    });
  }
  
  // Infinite Scroll Implementation (for demo purposes only)
  let page = 1;
  let loading = false;
  let hasMoreContent = true;
  
  // Get DOM elements
  const articleContainer = document.getElementById('articleContainer');
  const loadingIndicator = document.getElementById('loadingIndicator');
  const noMoreContent = document.getElementById('noMoreContent');
  
  // Function to create a news card element
  function createNewsCard(article, currentViewMode) {
    // Create a container div
    const container = document.createElement('div');
    
    // Define the class based on the view mode
    const isGrid = currentViewMode === 'grid';
    
    if (isGrid) {
      container.className = 'bg-white rounded-lg shadow-sm overflow-hidden hover:shadow-md transition-shadow duration-300';
    } else {
      container.className = 'bg-white rounded-lg shadow-sm overflow-hidden hover:shadow-md transition-shadow duration-300 flex';
    }
    
    // Get the categories
    const categories = (article.article_categories || [])
      .map(ac => ac?.categories)
      .filter(Boolean);
    
    // Format date
    const formatRelativeTime = (dateString) => {
      try {
        const date = new Date(dateString);
        const now = new Date();
        const diffInSeconds = Math.floor((now - date) / 1000);
        
        if (diffInSeconds < 60) {
          return 'hace unos segundos';
        } else if (diffInSeconds < 3600) {
          const minutes = Math.floor(diffInSeconds / 60);
          return `hace ${minutes} ${minutes === 1 ? 'minuto' : 'minutos'}`;
        } else if (diffInSeconds < 86400) {
          const hours = Math.floor(diffInSeconds / 3600);
          return `hace ${hours} ${hours === 1 ? 'hora' : 'horas'}`;
        } else if (diffInSeconds < 604800) {
          const days = Math.floor(diffInSeconds / 86400);
          return `hace ${days} ${days === 1 ? 'día' : 'días'}`;
        } else {
          return new Date(dateString).toLocaleDateString('es-ES', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          });
        }
      } catch (e) {
        console.error('Error formatting relative time:', e);
        return 'Recientemente';
      }
    };
    
    // Create HTML for the card based on the view mode
    if (isGrid) {
      container.innerHTML = `
        <div class="relative">
          <a href="/articulo/${article.slug}">
            <img 
              src="${article.imagen_principal || `https://picsum.photos/seed/${article.id || 'default'}/800/450`}" 
              alt="${article.titulo}"
              class="w-full h-48 object-cover"
              loading="lazy"
            />
          </a>
          
          <div class="absolute top-3 right-3 flex gap-1">
            ${article.destacado ? `
              <span class="bg-yellow-100 text-yellow-800 text-xs font-medium px-2 py-1 rounded flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-3 h-3 mr-1">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z" />
                </svg>
                Destacado
              </span>
            ` : ''}
            ${article.trending ? `
              <span class="bg-blue-100 text-blue-800 text-xs font-medium px-2 py-1 rounded flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-3 h-3 mr-1">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 18L9 11.25l4.306 4.307a11.95 11.95 0 015.814-5.519l2.74-1.22m0 0l-5.94-2.28m5.94 2.28l-2.28 5.941" />
                </svg>
                Tendencia
              </span>
            ` : ''}
            ${article.viral ? `
              <span class="bg-green-100 text-green-800 text-xs font-medium px-2 py-1 rounded flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-3 h-3 mr-1">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 13.5l10.5-11.25L12 10.5h8.25L9.75 21.75 12 13.5H3.75z" />
                </svg>
                Viral
              </span>
            ` : ''}
          </div>
        </div>
        
        <div class="p-4">
          <div class="flex flex-wrap gap-1 mb-2">
            ${categories.slice(0, 2).map(category => `
              <a 
                href="/categoria/${category.slug}"
                class="text-xs text-primary-700 bg-primary-50 hover:bg-primary-100 rounded-full px-2 py-0.5"
              >
                ${category.nombre}
              </a>
            `).join('')}
          </div>
          
          <h2 class="text-lg font-bold mb-2 line-clamp-2">
            <a href="/articulo/${article.slug}" class="text-gray-900 hover:text-primary-600">
              ${article.titulo}
            </a>
          </h2>
          
          <p class="text-gray-600 text-sm mb-3 line-clamp-2">${article.extracto}</p>
          
          <div class="flex justify-between items-center text-xs text-gray-500 mt-auto">
            <time datetime="${article.created_at}">${formatRelativeTime(article.created_at)}</time>
            <a href="/articulo/${article.slug}" class="text-primary-600 hover:text-primary-800 font-medium text-sm">
              Leer más
            </a>
          </div>
        </div>
      `;
    } else {
      container.innerHTML = `
        <a href="/articulo/${article.slug}" class="flex-shrink-0 w-1/3">
          <img 
            src="${article.imagen_principal || `https://picsum.photos/seed/${article.id || 'default'}/400/400`}" 
            alt="${article.titulo}"
            class="w-full h-full object-cover min-h-[120px]"
            loading="lazy"
          />
        </a>
        <div class="p-4 flex-grow flex flex-col">
          <div class="flex flex-wrap gap-1 mb-2">
            ${categories.slice(0, 2).map(category => `
              <a 
                href="/categoria/${category.slug}"
                class="text-xs text-primary-700 bg-primary-50 hover:bg-primary-100 rounded-full px-2 py-0.5"
              >
                ${category.nombre}
              </a>
            `).join('')}
          </div>
          
          <h2 class="text-lg font-bold mb-2">
            <a href="/articulo/${article.slug}" class="text-gray-900 hover:text-primary-600">
              ${article.titulo}
            </a>
          </h2>
          
          <p class="text-gray-600 text-sm mb-3 flex-grow">${article.extracto}</p>
          
          <div class="flex justify-between items-center mt-2">
            <div class="flex gap-1">
              ${article.destacado ? `
                <span class="bg-yellow-100 text-yellow-800 text-xs font-medium px-2 py-0.5 rounded flex items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-3 h-3 mr-1">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z" />
                  </svg>
                  <span class="hidden sm:inline">Destacado</span>
                </span>
              ` : ''}
              ${article.trending ? `
                <span class="bg-blue-100 text-blue-800 text-xs font-medium px-2 py-0.5 rounded flex items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-3 h-3 mr-1">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 18L9 11.25l4.306 4.307a11.95 11.95 0 015.814-5.519l2.74-1.22m0 0l-5.94-2.28m5.94 2.28l-2.28 5.941" />
                  </svg>
                  <span class="hidden sm:inline">Tendencia</span>
                </span>
              ` : ''}
              ${article.viral ? `
                <span class="bg-green-100 text-green-800 text-xs font-medium px-2 py-0.5 rounded flex items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-3 h-3 mr-1">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 13.5l10.5-11.25L12 10.5h8.25L9.75 21.75 12 13.5H3.75z" />
                  </svg>
                  <span class="hidden sm:inline">Viral</span>
                </span>
              ` : ''}
            </div>
            <div class="flex items-center">
              <time datetime="${article.created_at}" class="text-xs text-gray-500 mr-3">${formatRelativeTime(article.created_at)}</time>
              <a href="/articulo/${article.slug}" class="text-primary-600 hover:text-primary-800 font-medium text-sm">
                Leer más
              </a>
            </div>
          </div>
        </div>
      `;
    }
    
    return container;
  }
  
  // Function to fetch more articles
  async function fetchMoreArticles() {
    if (loading || !hasMoreContent) return;
    
    try {
      loading = true;
      
      // Show loading indicator
      if (loadingIndicator) loadingIndicator.classList.remove('hidden');
      
      // Get current page + 1
      page++;
      
      // Calculate offset
      const offset = page * 6;
      
      // Fetch data from API
      const response = await fetch(`/api/articles?limit=6&offset=${offset}`);
      
      if (!response.ok) {
        throw new Error('Error fetching more articles');
      }
      
      const data = await response.json();
      
      // Hide loading indicator after response is received
      if (loadingIndicator) loadingIndicator.classList.add('hidden');
      
      // If no articles returned or less than the limit, we've reached the end
      if (!data.articles || data.articles.length === 0) {
        hasMoreContent = false;
        if (noMoreContent) noMoreContent.classList.remove('hidden');
        return;
      }
      
      // Get current view mode
      const currentViewMode = document.querySelector('.grid-layout') ? 'grid' : 'list';
      
      // Append new articles to the container
      data.articles.forEach(article => {
        const card = createNewsCard(article, currentViewMode);
        articleContainer.appendChild(card);
      });
      
    } catch (error) {
      console.error('Error fetching more articles:', error);
    } finally {
      loading = false;
      if (loadingIndicator) loadingIndicator.classList.add('hidden');
    }
  }
  
  // Function to check if we should load more articles
  function checkScroll() {
    if (loading || !hasMoreContent) return;
    
    const scrollPosition = window.innerHeight + window.scrollY;
    const bodyHeight = document.body.offsetHeight;
    
    // Load more articles when user scrolls to 80% of the page
    if (scrollPosition >= bodyHeight * 0.8) {
      fetchMoreArticles();
    }
  }
  
  // Add scroll event listener to fetch more articles when needed
  window.addEventListener('scroll', checkScroll);
  
  // Create a simulated API endpoint
  const originalFetch = window.fetch;
  window.fetch = function(url, options) {
    // Intercept requests to our simulated API endpoint
    if (url.startsWith('/api/articles')) {
      return new Promise((resolve) => {
        // Parse the URL to get query parameters
        const urlObj = new URL(url, window.location.origin);
        const limit = parseInt(urlObj.searchParams.get('limit') || '6');
        const offset = parseInt(urlObj.searchParams.get('offset') || '0');
        
        // Simulate network delay
        setTimeout(() => {
          // Simulate empty response after a certain number of pages
          if (offset > 18) {
            resolve(new Response(JSON.stringify({ articles: [] }), {
              status: 200,
              headers: { 'Content-Type': 'application/json' }
            }));
            return;
          }
          
          // Generate mock articles
          const articles = Array.from({ length: limit }, (_, i) => ({
            id: `mock-${offset + i}`,
            titulo: `Artículo de ejemplo #${offset + i + 1}`,
            slug: `articulo-ejemplo-${offset + i + 1}`,
            extracto: 'Este es un extracto de ejemplo generado para simular la carga infinita de artículos en la página principal.',
            imagen_principal: `https://picsum.photos/seed/${offset + i}/800/450`,
            created_at: new Date(Date.now() - (offset + i) * 3600000).toISOString(),
            destacado: Math.random() > 0.8,
            trending: Math.random() > 0.7,
            viral: Math.random() > 0.8,
            article_categories: [
              {
                categories: {
                  id: 'cat-1',
                  nombre: 'Tecnología',
                  slug: 'tecnologia'
                }
              },
              {
                categories: {
                  id: 'cat-2',
                  nombre: 'Economía',
                  slug: 'economia'
                }
              }
            ]
          }));
          
          resolve(new Response(JSON.stringify({ articles }), {
            status: 200,
            headers: { 'Content-Type': 'application/json' }
          }));
        }, 800); // Simulate network delay
      });
    }
    
    // Pass through all other requests
    return originalFetch.apply(this, arguments);
  };
</script>
